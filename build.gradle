buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE'
    classpath 'com.gradle.publish:plugin-publish-plugin:0.9.1'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0x'
  }
}

apply plugin: 'groovy'
apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'io.spring.dependency-management'

repositories {
  jcenter()
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join('\n')
  }
}

dependencyManagement {
  dependencies {
    dependency 'org.codehaus.groovy:groovy-all:2.4.4'
  }
}

dependencies {
  compile gradleApi()
  compile 'org.codehaus.groovy:groovy-all:2.4.4'

  testCompile gradleTestKit()
  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
  testRuntime files(createClasspathManifest)
}

version = '2.0.17'
group = 'pl.greenpath.gradle.dockermicroservices'

pluginBundle {
  website = 'https://github.com/michalborek/docker-microservices-gradle-plugin'
  vcsUrl = 'https://github.com/michalborek/docker-microservices-gradle-plugin'
  description = 'Microservices gradle plugin'
  tags = ['docker', 'microservices']

  plugins {
    greetingsPlugin {
      id = 'pl.greenpath.gradle.docker.microservices'
      displayName = 'Docker Microservices Plugin'
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.14'
}
